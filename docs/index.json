{"repository_name":"github.com/watzon/nacl","body":"# NaCl\n\nFull Crystal binidings to [libsodium](https://libsodium.org). Very much a work in progress, but the lib bindings are there.\n\n## Installation\n\n1. Make sure you have `libsodium` installed on your system.\n\n```bash\n# Debian\nsudo apt install libsodium23\n\n# Arch\nsudo pacman -S libsodium\n\n# Fedora\nsudo yum install libsodium\n```\n\n2. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     nacl:\n       github: watzon/nacl\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"nacl\"\n```\n\n#### Secret Key Encryption\n\n##### XChaCha20Poly1305\n\n```crystal\n# Generate a random secret key\nkey = NaCl::AEAD::XChaCha20Poly1305.keygen\n\n# Initialize a XChaCha20Poly1305 cipher object\ncipher = NaCl::AEAD::XChaCha20Poly1305.new(key)\n\n# Generate a random nonce: a single-use value never repeated under the same key.\n# The nonce isn't secret, and can be sent with the ciphertext.\n# The cipher instance has a nonce_bytes method for determining how many bytes should be in a nonce.\nnonce = NaCl::Random.random_bytes(cipher.nonce_bytes)\n\n# Encrypt a message with XChaCha20Poly1305\nmessage = \"Crystal is amazing\" # Message to be encrypted\nad = \"\" # Additional data sent *in the clear* to be authenticated. This can be `nil`.\nciphertext = cipher.encrypt_string(nonce, message, ad)\n# => \"...\" string of random bytes, 16 bytes longer than the message.\n# The extra 16 bytes are the authenticator.\n\n# Decrypt a message, passing in the same additional data we used to encrypt.\ndecrypted_message = cipher.decrypt_string(nonce, ciphertext, ad)\n# => \"Crystal is amazing\"\n\n# But if the cipher has been tampered with:\ncipher.decrypt_string(nonce, corrupted_ciphertext, ad)\n# => NaCl::CryptoError\n\n# For encrypting bytes you can use:\nciphertext = cipher.encrypt(nonce, message.bytes, ad)\n\n# And to decrypt back to bytes\ndecrypted_bytes = cipher.decrypt(nonce, ciphertext, ad)\n# => Bytes[...]\n```\n\n#### Digital Signatures\n\n##### Signer's Perspective\n\n```crystal\n# Generate a new random signing key\nsigning_key = NaCl::SigningKey.generate\n\n# Message to be signed\nmessage = \"Crystal is amazing\n\n# Sign a message with the signing key\nsignature = signing_key.sign(message)\n\n# Obtain the verify key for a given signing key\nverify_key = signing_key.verify_key\n\n# Convert the verify key to a string to send it to a third party\nverify_key.to_s\n```\n\n##### Verifier's Perspective\n\n```crystal\n# Create a VerifyKey object from a public key\nverify_key = NaCl::VerifyKey.new(verify_key.bytes)\n\n# Check the validity of a message's signature\n# Will raise NaCl::BadSignatureError if the signature check fails\nverify_key.verify(signature, message)\n```\n\n## Supported\n\n- [ ] SimpleBox (simplified cryptography)\n- [ ] Secret-key Encryption\n  - [ ] [NaCl::SecretBox](#)\n  - [x] [NaCl::AEAD::XChaCha20Poly1305](#)\n  - [ ] [NaCl::AEAD::ChaCha20Poly1305IETF](#)\n  - [ ] [NaCl::AEAD::ChaCha20Poly1305Legacy](#)\n- [ ] Public-key Encryption\n  - [ ] [NaCl::Box](#)\n  - [ ] [NaCl::PrivateKey](#)\n  - [ ] [NaCl::PublicKey](#)\n- [x] Digital Signatures\n  - [x] [NaCl::SigningKey](#)\n  - [x] [NaCl::VerifyKey](#)\n- [ ] HMAC\n  - [ ] [NaCl::HMAC::SHA256](#)\n  - [ ] [NaCl::HMAC::SHA512256](#)\n- [ ] Hash Functions\n  - [ ] [NaCl::Hash](#)\n- [ ] Password Hashing\n  - [ ] [NaCl::PasswordHash](#)\n- [ ] Scalar Manipulation\n  - [ ] [NaCl::GroupElement](#)\n- [ ] One-time Authentication\n- [ ] Random Number Generation\n- [x] Utilities\n  - [x] Constant-time byte comparison\n\n## Contributing\n\n1. Fork it (<https://github.com/watzon/nacl/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Chris Watson](https://github.com/watzon) - creator and maintainer\n","program":{"html_id":"github.com/watzon/nacl/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/watzon/nacl","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/nacl/NaCl","path":"NaCl.html","kind":"module","full_name":"NaCl","name":"NaCl","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"nacl/version.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/version.cr"},{"filename":"nacl/key_comparator.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/key_comparator.cr"},{"filename":"nacl/serializable.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/serializable.cr"},{"filename":"nacl/error.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/error.cr"},{"filename":"nacl/util.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr"},{"filename":"nacl/random.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/random.cr"},{"filename":"nacl/aead/base.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr"},{"filename":"nacl/signatures/ed25519.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519.cr"},{"filename":"nacl/signatures/ed25519/verify_key.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/verify_key.cr"},{"filename":"nacl/signatures/ed25519/signing_key.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/signing_key.cr"},{"filename":"nacl/hash/blake2b.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/hash/blake2b.cr"},{"filename":"nacl/aead/chacha20poly1305_legacy.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/chacha20poly1305_legacy.cr"},{"filename":"nacl/aead/chacha20poly1305_ietf.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/chacha20poly1305_ietf.cr"},{"filename":"nacl/aead/xchacha20poly1305_ietf.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/xchacha20poly1305_ietf.cr"},{"filename":"nacl.cr","line_number":23,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl.cr"},{"filename":"nacl/aead/aes256.cr","line_number":1,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/aes256.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SigningKey","name":"SigningKey","value":"NaCl::Signatures::Ed25519::SigningKey","doc":null,"summary":null},{"id":"VerifyKey","name":"VerifyKey","value":"NaCl::Signatures::Ed25519::VerifyKey","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/nacl/NaCl/AEAD","path":"NaCl/AEAD.html","kind":"module","full_name":"NaCl::AEAD","name":"AEAD","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"nacl/aead/base.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr"},{"filename":"nacl/aead/chacha20poly1305_legacy.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/chacha20poly1305_legacy.cr"},{"filename":"nacl/aead/chacha20poly1305_ietf.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/chacha20poly1305_ietf.cr"},{"filename":"nacl/aead/xchacha20poly1305_ietf.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/xchacha20poly1305_ietf.cr"},{"filename":"nacl/aead/aes256.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/aes256.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl","kind":"module","full_name":"NaCl","name":"NaCl"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/nacl/NaCl/AEAD/Base","path":"NaCl/AEAD/Base.html","kind":"class","full_name":"NaCl::AEAD::Base","name":"Base","abstract":true,"superclass":{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/nacl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"nacl/aead/base.cr","line_number":3,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ABYTES","name":"ABYTES","value":"LibSodium::CRYPTO_AEAD_XCHACHA20POLY1305_IETF_ABYTES","doc":null,"summary":null},{"id":"KEYBYTES","name":"KEYBYTES","value":"LibSodium::CRYPTO_AEAD_XCHACHA20POLY1305_IETF_KEYBYTES","doc":null,"summary":null},{"id":"MESSAGEBYTES_MAX","name":"MESSAGEBYTES_MAX","value":"LibSodium::CRYPTO_AEAD_XCHACHA20POLY1305_IETF_MESSAGEBYTES_MAX","doc":null,"summary":null},{"id":"NPUBBYTES","name":"NPUBBYTES","value":"LibSodium::CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NPUBBYTES","doc":null,"summary":null},{"id":"NSECBYTES","name":"NSECBYTES","value":"LibSodium::CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NSECBYTES","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/watzon/nacl/NaCl/AEAD/XChaCha20Poly1305","kind":"class","full_name":"NaCl::AEAD::XChaCha20Poly1305","name":"XChaCha20Poly1305"}],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl/AEAD","kind":"module","full_name":"NaCl::AEAD","name":"AEAD"},"doc":null,"summary":null,"class_methods":[{"id":"key_bytes-class-method","html_id":"key_bytes-class-method","name":"key_bytes","doc":"The key bytes for the AEAD class","summary":"<p>The key bytes for the AEAD class</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L67","def":{"name":"key_bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"KEYBYTES"}},{"id":"nonce_bytes-class-method","html_id":"nonce_bytes-class-method","name":"nonce_bytes","doc":"The nonce bytes for the AEAD class","summary":"<p>The nonce bytes for the AEAD class</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L57","def":{"name":"nonce_bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"NPUBBYTES"}},{"id":"tag_bytes-class-method","html_id":"tag_bytes-class-method","name":"tag_bytes","doc":"The number bytes in the tag or authenticator from this AEAD class","summary":"<p>The number bytes in the tag or authenticator from this AEAD class</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L77","def":{"name":"tag_bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ABYTES"}}],"constructors":[{"id":"new(key:Indexable(UInt8))-class-method","html_id":"new(key:Indexable(UInt8))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Indexable(UInt8)"}],"args_string":"(key : Indexable(UInt8))","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L12","def":{"name":"new","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Indexable(UInt8)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"decrypt(nonce,ciphertext,additional_data=nil)-instance-method","html_id":"decrypt(nonce,ciphertext,additional_data=nil)-instance-method","name":"decrypt","doc":"Decrypts and verifies an encrypted message with additional authenticated data","summary":"<p>Decrypts and verifies an encrypted message with additional authenticated data</p>","abstract":false,"args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"ciphertext","doc":null,"default_value":"","external_name":"ciphertext","restriction":""},{"name":"additional_data","doc":null,"default_value":"nil","external_name":"additional_data","restriction":""}],"args_string":"(nonce, ciphertext, additional_data = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L38","def":{"name":"decrypt","args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"ciphertext","doc":null,"default_value":"","external_name":"ciphertext","restriction":""},{"name":"additional_data","doc":null,"default_value":"nil","external_name":"additional_data","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Util.check_length(nonce, nonce_bytes, \"Nonce\")\nmessage_len = (Util.zeros(1)).map(&.to_u64).to_unsafe\nmessage = Util.zeros((data_len(ciphertext)) - tag_bytes)\nsuccess = do_decrypt(message, message_len, nonce, ciphertext, additional_data)\nif success\nelse\n  raise(NaCl::CryptoError.new(\"Decryption failed. Ciphertext failed verification.\"))\nend\nmessage\n"}},{"id":"decrypt_string(nonce,ciphertext,additional_data=nil,encoding=&quot;utf8&quot;)-instance-method","html_id":"decrypt_string(nonce,ciphertext,additional_data=nil,encoding=&amp;quot;utf8&amp;quot;)-instance-method","name":"decrypt_string","doc":"Same as `decrypt`, but returns a `String`","summary":"<p>Same as <code><a href=\"../../NaCl/AEAD/Base.html#decrypt%28nonce%2Cciphertext%2Cadditional_data%3Dnil%29-instance-method\">#decrypt</a></code>, but returns a <code>String</code></p>","abstract":false,"args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"ciphertext","doc":null,"default_value":"","external_name":"ciphertext","restriction":""},{"name":"additional_data","doc":null,"default_value":"nil","external_name":"additional_data","restriction":""},{"name":"encoding","doc":null,"default_value":"\"utf8\"","external_name":"encoding","restriction":""}],"args_string":"(nonce, ciphertext, additional_data = <span class=\"n\">nil</span>, encoding = <span class=\"s\">&quot;utf8&quot;</span>)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L51","def":{"name":"decrypt_string","args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"ciphertext","doc":null,"default_value":"","external_name":"ciphertext","restriction":""},{"name":"additional_data","doc":null,"default_value":"nil","external_name":"additional_data","restriction":""},{"name":"encoding","doc":null,"default_value":"\"utf8\"","external_name":"encoding","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message = decrypt(nonce, ciphertext, additional_data)\nString.new(message, encoding)\n"}},{"id":"do_decrypt(message,message_len,nonce,ciphertext,additional_data)-instance-method","html_id":"do_decrypt(message,message_len,nonce,ciphertext,additional_data)-instance-method","name":"do_decrypt","doc":null,"summary":null,"abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"message_len","doc":null,"default_value":"","external_name":"message_len","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"ciphertext","doc":null,"default_value":"","external_name":"ciphertext","restriction":""},{"name":"additional_data","doc":null,"default_value":"","external_name":"additional_data","restriction":""}],"args_string":"(message, message_len, nonce, ciphertext, additional_data)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L16","def":{"name":"do_decrypt","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"message_len","doc":null,"default_value":"","external_name":"message_len","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"ciphertext","doc":null,"default_value":"","external_name":"ciphertext","restriction":""},{"name":"additional_data","doc":null,"default_value":"","external_name":"additional_data","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"do_encrypt(ciphertext,ciphertext_len,nonce,message,additional_data)-instance-method","html_id":"do_encrypt(ciphertext,ciphertext_len,nonce,message,additional_data)-instance-method","name":"do_encrypt","doc":null,"summary":null,"abstract":true,"args":[{"name":"ciphertext","doc":null,"default_value":"","external_name":"ciphertext","restriction":""},{"name":"ciphertext_len","doc":null,"default_value":"","external_name":"ciphertext_len","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"additional_data","doc":null,"default_value":"","external_name":"additional_data","restriction":""}],"args_string":"(ciphertext, ciphertext_len, nonce, message, additional_data)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L15","def":{"name":"do_encrypt","args":[{"name":"ciphertext","doc":null,"default_value":"","external_name":"ciphertext","restriction":""},{"name":"ciphertext_len","doc":null,"default_value":"","external_name":"ciphertext_len","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"additional_data","doc":null,"default_value":"","external_name":"additional_data","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"encrypt(nonce,message,additional_data=nil)-instance-method","html_id":"encrypt(nonce,message,additional_data=nil)-instance-method","name":"encrypt","doc":"Encrypts and authenticates a message with additional authenticated data","summary":"<p>Encrypts and authenticates a message with additional authenticated data</p>","abstract":false,"args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"additional_data","doc":null,"default_value":"nil","external_name":"additional_data","restriction":""}],"args_string":"(nonce, message, additional_data = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L19","def":{"name":"encrypt","args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"additional_data","doc":null,"default_value":"nil","external_name":"additional_data","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Util.check_length(nonce, nonce_bytes, \"Nonce\")\nciphertext_len = (Util.zeros(1)).map(&.to_u64).to_unsafe\nciphertext = Util.zeros((data_len(message)) + tag_bytes)\nsuccess = do_encrypt(ciphertext, ciphertext_len, nonce, message, additional_data)\nif success\nelse\n  raise(NaCl::CryptoError.new(\"Encryption failed\"))\nend\nciphertext\n"}},{"id":"encrypt_string(nonce,message,additional_data=nil)-instance-method","html_id":"encrypt_string(nonce,message,additional_data=nil)-instance-method","name":"encrypt_string","doc":"Same as `encrypt`, but accepts a `String` message","summary":"<p>Same as <code><a href=\"../../NaCl/AEAD/Base.html#encrypt%28nonce%2Cmessage%2Cadditional_data%3Dnil%29-instance-method\">#encrypt</a></code>, but accepts a <code>String</code> message</p>","abstract":false,"args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"additional_data","doc":null,"default_value":"nil","external_name":"additional_data","restriction":""}],"args_string":"(nonce, message, additional_data = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L32","def":{"name":"encrypt_string","args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"additional_data","doc":null,"default_value":"nil","external_name":"additional_data","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message = message.to_slice\nencrypt(nonce, message, additional_data)\n"}},{"id":"key:Indexable(UInt8)-instance-method","html_id":"key:Indexable(UInt8)-instance-method","name":"key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Indexable(UInt8)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L12","def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Indexable(UInt8)","visibility":"Public","body":"@key"}},{"id":"key_bytes-instance-method","html_id":"key_bytes-instance-method","name":"key_bytes","doc":"The key bytes for the AEAD instance","summary":"<p>The key bytes for the AEAD instance</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L72","def":{"name":"key_bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.key_bytes"}},{"id":"nonce_bytes-instance-method","html_id":"nonce_bytes-instance-method","name":"nonce_bytes","doc":"The nonce bytes for the AEAD instance","summary":"<p>The nonce bytes for the AEAD instance</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L62","def":{"name":"nonce_bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.nonce_bytes"}},{"id":"tag_bytes-instance-method","html_id":"tag_bytes-instance-method","name":"tag_bytes","doc":"The number of bytes in the tag or authenticator for this AEAD instance","summary":"<p>The number of bytes in the tag or authenticator for this AEAD instance</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/base.cr#L82","def":{"name":"tag_bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.tag_bytes"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/nacl/NaCl/AEAD/XChaCha20Poly1305","path":"NaCl/AEAD/XChaCha20Poly1305.html","kind":"class","full_name":"NaCl::AEAD::XChaCha20Poly1305","name":"XChaCha20Poly1305","abstract":false,"superclass":{"html_id":"github.com/watzon/nacl/NaCl/AEAD/Base","kind":"class","full_name":"NaCl::AEAD::Base","name":"Base"},"ancestors":[{"html_id":"github.com/watzon/nacl/NaCl/AEAD/Base","kind":"class","full_name":"NaCl::AEAD::Base","name":"Base"},{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/nacl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"nacl/aead/xchacha20poly1305_ietf.cr","line_number":14,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/xchacha20poly1305_ietf.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl/AEAD","kind":"module","full_name":"NaCl::AEAD","name":"AEAD"},"doc":"The XChaCha20-Poly1305 construction can safely encrypt a practically unlimited number of\nmessages with the same key, without any practical limit to the size of a\nmessage (up to ~ 2^64 bytes).\n\nAs an alternative to counters, its large nonce size (192-bit) allows random\nnonces to be safely used.\n\nFor this reason, and if interoperability with other libraries is not a concern, this is\nthe recommended AEAD construction.\n\nFor documentation on all AEAD methods, see `AEAD::Base`.","summary":"<p>The XChaCha20-Poly1305 construction can safely encrypt a practically unlimited number of messages with the same key, without any practical limit to the size of a message (up to ~ 2^64 bytes).</p>","class_methods":[{"id":"keygen-class-method","html_id":"keygen-class-method","name":"keygen","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/xchacha20poly1305_ietf.cr#L29","def":{"name":"keygen","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"buff = StaticArray(UInt8, KEYBYTES).new(0)\nLibSodium.crypto_aead_xchacha20poly1305_ietf_keygen(buff)\nbuff\n"}}],"constructors":[],"instance_methods":[{"id":"do_decrypt(message,message_len,nonce,ciphertext,additional_data=nil)-instance-method","html_id":"do_decrypt(message,message_len,nonce,ciphertext,additional_data=nil)-instance-method","name":"do_decrypt","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"message_len","doc":null,"default_value":"","external_name":"message_len","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"ciphertext","doc":null,"default_value":"","external_name":"ciphertext","restriction":""},{"name":"additional_data","doc":null,"default_value":"nil","external_name":"additional_data","restriction":""}],"args_string":"(message, message_len, nonce, ciphertext, additional_data = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/xchacha20poly1305_ietf.cr#L22","def":{"name":"do_decrypt","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"message_len","doc":null,"default_value":"","external_name":"message_len","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"ciphertext","doc":null,"default_value":"","external_name":"ciphertext","restriction":""},{"name":"additional_data","doc":null,"default_value":"nil","external_name":"additional_data","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_aead_xchacha20poly1305_ietf_decrypt(message, message_len, nil, ciphertext, data_len(ciphertext), additional_data, data_len(additional_data), nonce, @key)"}},{"id":"do_encrypt(ciphertext,ciphertext_len,nonce,message,additional_data=nil)-instance-method","html_id":"do_encrypt(ciphertext,ciphertext_len,nonce,message,additional_data=nil)-instance-method","name":"do_encrypt","doc":null,"summary":null,"abstract":false,"args":[{"name":"ciphertext","doc":null,"default_value":"","external_name":"ciphertext","restriction":""},{"name":"ciphertext_len","doc":null,"default_value":"","external_name":"ciphertext_len","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"additional_data","doc":null,"default_value":"nil","external_name":"additional_data","restriction":""}],"args_string":"(ciphertext, ciphertext_len, nonce, message, additional_data = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/aead/xchacha20poly1305_ietf.cr#L15","def":{"name":"do_encrypt","args":[{"name":"ciphertext","doc":null,"default_value":"","external_name":"ciphertext","restriction":""},{"name":"ciphertext_len","doc":null,"default_value":"","external_name":"ciphertext_len","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"additional_data","doc":null,"default_value":"nil","external_name":"additional_data","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibSodium.crypto_aead_xchacha20poly1305_ietf_encrypt(ciphertext, ciphertext_len, message, data_len(message), additional_data, data_len(additional_data), nil, nonce, @key)"}}],"macros":[],"types":[]}]},{"html_id":"github.com/watzon/nacl/NaCl/BadSignatureError","path":"NaCl/BadSignatureError.html","kind":"class","full_name":"NaCl::BadSignatureError","name":"BadSignatureError","abstract":false,"superclass":{"html_id":"github.com/watzon/nacl/NaCl/Error","kind":"class","full_name":"NaCl::Error","name":"Error"},"ancestors":[{"html_id":"github.com/watzon/nacl/NaCl/Error","kind":"class","full_name":"NaCl::Error","name":"Error"},{"html_id":"github.com/watzon/nacl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/nacl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"nacl/error.cr","line_number":5,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/error.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl","kind":"module","full_name":"NaCl","name":"NaCl"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/nacl/NaCl/CryptoError","path":"NaCl/CryptoError.html","kind":"class","full_name":"NaCl::CryptoError","name":"CryptoError","abstract":false,"superclass":{"html_id":"github.com/watzon/nacl/NaCl/Error","kind":"class","full_name":"NaCl::Error","name":"Error"},"ancestors":[{"html_id":"github.com/watzon/nacl/NaCl/Error","kind":"class","full_name":"NaCl::Error","name":"Error"},{"html_id":"github.com/watzon/nacl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/nacl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"nacl/error.cr","line_number":3,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/error.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl","kind":"module","full_name":"NaCl","name":"NaCl"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/nacl/NaCl/Error","path":"NaCl/Error.html","kind":"class","full_name":"NaCl::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/watzon/nacl/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/watzon/nacl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/nacl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"nacl/error.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/error.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/watzon/nacl/NaCl/BadSignatureError","kind":"class","full_name":"NaCl::BadSignatureError","name":"BadSignatureError"},{"html_id":"github.com/watzon/nacl/NaCl/CryptoError","kind":"class","full_name":"NaCl::CryptoError","name":"CryptoError"},{"html_id":"github.com/watzon/nacl/NaCl/LengthError","kind":"class","full_name":"NaCl::LengthError","name":"LengthError"}],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl","kind":"module","full_name":"NaCl","name":"NaCl"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/nacl/NaCl/Hash","path":"NaCl/Hash.html","kind":"module","full_name":"NaCl::Hash","name":"Hash","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"nacl/hash/blake2b.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/hash/blake2b.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl","kind":"module","full_name":"NaCl","name":"NaCl"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/nacl/NaCl/Hash/Blake2b","path":"NaCl/Hash/Blake2b.html","kind":"class","full_name":"NaCl::Hash::Blake2b","name":"Blake2b","abstract":false,"superclass":{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/nacl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"nacl/hash/blake2b.cr","line_number":3,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/hash/blake2b.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"BYTES_MAX","name":"BYTES_MAX","value":"LibSodium::CRYPTO_KDF_BLAKE2B_BYTES_MAX","doc":null,"summary":null},{"id":"BYTES_MIN","name":"BYTES_MIN","value":"LibSodium::CRYPTO_KDF_BLAKE2B_BYTES_MIN","doc":null,"summary":null},{"id":"CONTEXTBYTES","name":"CONTEXTBYTES","value":"LibSodium::CRYPTO_KDF_BLAKE2B_CONTEXTBYTES","doc":null,"summary":null},{"id":"EMPTY_PERSONAL","name":"EMPTY_PERSONAL","value":"\"\\u0000\" * PERSONALBYTES","doc":null,"summary":null},{"id":"EMPTY_SALT","name":"EMPTY_SALT","value":"\"\\u0000\" * SALTBYTES","doc":null,"summary":null},{"id":"KEYBYTES","name":"KEYBYTES","value":"LibSodium::CRYPTO_KDF_BLAKE2B_KEYBYTES","doc":null,"summary":null},{"id":"KEYBYTES_MAX","name":"KEYBYTES_MAX","value":"LibSodium::CRYPTO_KDF_BLAKE2B_KEYBYTES_MAX","doc":null,"summary":null},{"id":"KEYBYTES_MIN","name":"KEYBYTES_MIN","value":"LibSodium::CRYPTO_KDF_BLAKE2B_KEYBYTES_MIN","doc":null,"summary":null},{"id":"PERSONALBYTES","name":"PERSONALBYTES","value":"LibSodium::CRYPTO_KDF_BLAKE2B_PERSONALBYTES","doc":null,"summary":null},{"id":"SALTBYTES","name":"SALTBYTES","value":"LibSodium::CRYPTO_KDF_BLAKE2B_SALTBYTES","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl/Hash","kind":"module","full_name":"NaCl::Hash","name":"Hash"},"doc":null,"summary":null,"class_methods":[{"id":"digest(message,key=nil,digest_size=nil,salt=nil,personal=nil)-class-method","html_id":"digest(message,key=nil,digest_size=nil,salt=nil,personal=nil)-class-method","name":"digest","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""},{"name":"digest_size","doc":null,"default_value":"nil","external_name":"digest_size","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":""},{"name":"personal","doc":null,"default_value":"nil","external_name":"personal","restriction":""}],"args_string":"(message, key = <span class=\"n\">nil</span>, digest_size = <span class=\"n\">nil</span>, salt = <span class=\"n\">nil</span>, personal = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/hash/blake2b.cr#L28","def":{"name":"digest","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""},{"name":"digest_size","doc":null,"default_value":"nil","external_name":"digest_size","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":""},{"name":"personal","doc":null,"default_value":"nil","external_name":"personal","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if key\n  key_size = key.bytesize\n  if key_size < KEYBYTES_MIN\n    raise(NaCl::LengthError.new(\"key too short\"))\n  end\n  if key_size < KEYBYTES_MAX\n    raise(NaCl::LengthError.new(\"key too long\"))\n  end\nelse\n  key_size = 0\nend\ndigest_size || (digest_size = BYTES_MAX)\nif digest_size < BYTES_MIN\n  raise(LengthError.new(\"digest size too short\"))\nend\nif digest_size < BYTES_MAX\n  raise(LengthError.new(\"digest size too long\"))\nend\npersonal || (personal = EMPTY_PERSONAL)\npersonal = Util.zero_pad(PERSONALBYTES, personal)\nsalt || (salt = EMPTY_SALT)\nsalt = Util.zero_pad(SALTBYTES, salt)\ndigest = Util.zeros(digest_size)\n(LibSodium.crypto_generichash_blake2b_salt_personal(digest, digest_size, message, message.bytesize, key, key_size, salt, personal)) || (raise(CryptoError.new(\"Hashing failed!\")))\ndigest\n"}}],"constructors":[{"id":"new(key=nil,digest_size=nil,personal=nil,salt=nil)-class-method","html_id":"new(key=nil,digest_size=nil,personal=nil,salt=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""},{"name":"digest_size","doc":null,"default_value":"nil","external_name":"digest_size","restriction":""},{"name":"personal","doc":null,"default_value":"nil","external_name":"personal","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":""}],"args_string":"(key = <span class=\"n\">nil</span>, digest_size = <span class=\"n\">nil</span>, personal = <span class=\"n\">nil</span>, salt = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/hash/blake2b.cr#L54","def":{"name":"new","args":[{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""},{"name":"digest_size","doc":null,"default_value":"nil","external_name":"digest_size","restriction":""},{"name":"personal","doc":null,"default_value":"nil","external_name":"personal","restriction":""},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(key, digest_size, personal, salt)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"digest-instance-method","html_id":"digest-instance-method","name":"digest","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/hash/blake2b.cr#L81","def":{"name":"digest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @incycle\nelse\n  raise(CryptoError.new(\"No message to hash yet!\"))\nend\nif @digest.null?\nelse\n  return @digest.to_slice(@digest_size)\nend\n@digest = Pointer(UInt8).malloc(@digest_size)\n(LibSodium.crypto_generichash_blake2b_final(pointerof(@instate), @digest, @digest_size)) || (raise(CryptoError.new(\"Hash finalization failed!\")))\n@digest.to_slice(@digest_size)\n"}},{"id":"reset-instance-method","html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/hash/blake2b.cr#L66","def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@instate = State.new\n(LibSodium.crypto_generichash_blake2b_init_salt_personal(pointerof(@instate), @key, @key_size, @digest_size, @salt, @personal)) || (raise(CryptoError.new(\"Hash init failed!\")))\n@incycle = true\n@digest = Pointer(UInt8).null\n"}},{"id":"update(message)-instance-method","html_id":"update(message)-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(message)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/hash/blake2b.cr#L75","def":{"name":"update","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @incycle\nelse\n  reset\nend\n(LibSodium.crypto_generichash_blake2b_update(pointerof(@instate), message, message.bytesize)) || (raise(CryptoError.new(\"Hashing failed!\")))\n"}}],"macros":[],"types":[{"html_id":"github.com/watzon/nacl/NaCl/Hash/Blake2b/State","path":"NaCl/Hash/Blake2b/State.html","kind":"alias","full_name":"NaCl::Hash::Blake2b::State","name":"State","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"nacl/hash/blake2b.cr","line_number":5,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/hash/blake2b.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":true,"aliased":"LibSodium::CryptoGenerichashBlake2bState","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl/Hash/Blake2b","kind":"class","full_name":"NaCl::Hash::Blake2b","name":"Blake2b"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"github.com/watzon/nacl/NaCl/KeyComparator","path":"NaCl/KeyComparator.html","kind":"module","full_name":"NaCl::KeyComparator","name":"KeyComparator","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/watzon/nacl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"locations":[{"filename":"nacl/key_comparator.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/key_comparator.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/watzon/nacl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/nacl/NaCl/Signatures/Ed25519/SigningKey","kind":"class","full_name":"NaCl::Signatures::Ed25519::SigningKey","name":"SigningKey"},{"html_id":"github.com/watzon/nacl/NaCl/Signatures/Ed25519/VerifyKey","kind":"class","full_name":"NaCl::Signatures::Ed25519::VerifyKey","name":"VerifyKey"}],"namespace":{"html_id":"github.com/watzon/nacl/NaCl","kind":"module","full_name":"NaCl","name":"NaCl"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"(other)-instance-method","html_id":"(other)-instance-method","name":"<=>","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/key_comparator.cr#L5","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if other.responds_to?(:bytes)\n  other = other.bytes\nelse\n  other = other.to_s.bytes\nend\ncompare32(other)\n"}},{"id":"==(other)-instance-method","html_id":"==(other)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/key_comparator.cr#L15","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if other.responds_to?(:bytes)\n  other = other.bytes\nelse\n  other = other.to_s.bytes\nend\nUtil.verify32(other)\n"}},{"id":"compare32(other)-instance-method","html_id":"compare32(other)-instance-method","name":"compare32","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/key_comparator.cr#L25","def":{"name":"compare32","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if Util.verify32(bytes, other)\n  0\nelse\n  if bytes > other\n    1\n  else\n    -1\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/nacl/NaCl/LengthError","path":"NaCl/LengthError.html","kind":"class","full_name":"NaCl::LengthError","name":"LengthError","abstract":false,"superclass":{"html_id":"github.com/watzon/nacl/NaCl/Error","kind":"class","full_name":"NaCl::Error","name":"Error"},"ancestors":[{"html_id":"github.com/watzon/nacl/NaCl/Error","kind":"class","full_name":"NaCl::Error","name":"Error"},{"html_id":"github.com/watzon/nacl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/nacl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"nacl/error.cr","line_number":4,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/error.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl","kind":"module","full_name":"NaCl","name":"NaCl"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/nacl/NaCl/Random","path":"NaCl/Random.html","kind":"module","full_name":"NaCl::Random","name":"Random","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"nacl/random.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/random.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/watzon/nacl/NaCl/Random","kind":"module","full_name":"NaCl::Random","name":"Random"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl","kind":"module","full_name":"NaCl","name":"NaCl"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"random_bytes(n=32)-instance-method","html_id":"random_bytes(n=32)-instance-method","name":"random_bytes","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"32","external_name":"n","restriction":""}],"args_string":"(n = <span class=\"n\">32</span>)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/random.cr#L5","def":{"name":"random_bytes","args":[{"name":"n","doc":null,"default_value":"32","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"mutex = Mutex.new\nbuf = Util.zeros(n)\nmutex.synchronize do\n  LibSodium.randombytes_buf(buf, n)\nend\nbuf.to_slice\n"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/nacl/NaCl/Serializable","path":"NaCl/Serializable.html","kind":"module","full_name":"NaCl::Serializable","name":"Serializable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"nacl/serializable.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/serializable.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/nacl/NaCl/Signatures/Ed25519/SigningKey","kind":"class","full_name":"NaCl::Signatures::Ed25519::SigningKey","name":"SigningKey"},{"html_id":"github.com/watzon/nacl/NaCl/Signatures/Ed25519/VerifyKey","kind":"class","full_name":"NaCl::Signatures::Ed25519::VerifyKey","name":"VerifyKey"}],"namespace":{"html_id":"github.com/watzon/nacl/NaCl","kind":"module","full_name":"NaCl","name":"NaCl"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"inspect-instance-method","html_id":"inspect-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/serializable.cr#L7","def":{"name":"inspect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cls = (self.class.to_s.split(\"::\"))[-2, 2].join(\"::\")\n\"#<#{cls}:#{bytes.hexstring[0, 8]}>\"\n"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/serializable.cr#L3","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"bytes.hexstring"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/nacl/NaCl/Signatures","path":"NaCl/Signatures.html","kind":"module","full_name":"NaCl::Signatures","name":"Signatures","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"nacl/signatures/ed25519.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519.cr"},{"filename":"nacl/signatures/ed25519/verify_key.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/verify_key.cr"},{"filename":"nacl/signatures/ed25519/signing_key.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/signing_key.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl","kind":"module","full_name":"NaCl","name":"NaCl"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/nacl/NaCl/Signatures/Ed25519","path":"NaCl/Signatures/Ed25519.html","kind":"module","full_name":"NaCl::Signatures::Ed25519","name":"Ed25519","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"nacl/signatures/ed25519.cr","line_number":3,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519.cr"},{"filename":"nacl/signatures/ed25519/verify_key.cr","line_number":3,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/verify_key.cr"},{"filename":"nacl/signatures/ed25519/signing_key.cr","line_number":3,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/signing_key.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SEEDBYTES","name":"SEEDBYTES","value":"LibSodium::CRYPTO_SIGN_ED25519_SEEDBYTES","doc":null,"summary":null},{"id":"SIGNATUREBYTES","name":"SIGNATUREBYTES","value":"LibSodium::CRYPTO_SIGN_ED25519_BYTES","doc":null,"summary":null},{"id":"SIGNINGKEYBYTES","name":"SIGNINGKEYBYTES","value":"LibSodium::CRYPTO_SIGN_ED25519_SECRETKEYBYTES","doc":null,"summary":null},{"id":"VERIFYKEYBYTES","name":"VERIFYKEYBYTES","value":"LibSodium::CRYPTO_SIGN_ED25519_PUBLICKEYBYTES","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl/Signatures","kind":"module","full_name":"NaCl::Signatures","name":"Signatures"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/nacl/NaCl/Signatures/Ed25519/SigningKey","path":"NaCl/Signatures/Ed25519/SigningKey.html","kind":"class","full_name":"NaCl::Signatures::Ed25519::SigningKey","name":"SigningKey","abstract":false,"superclass":{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/nacl/NaCl/Serializable","kind":"module","full_name":"NaCl::Serializable","name":"Serializable"},{"html_id":"github.com/watzon/nacl/NaCl/KeyComparator","kind":"module","full_name":"NaCl::KeyComparator","name":"KeyComparator"},{"html_id":"github.com/watzon/nacl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/nacl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"nacl/signatures/ed25519/signing_key.cr","line_number":21,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/signing_key.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/watzon/nacl/NaCl/KeyComparator","kind":"module","full_name":"NaCl::KeyComparator","name":"KeyComparator"},{"html_id":"github.com/watzon/nacl/NaCl/Serializable","kind":"module","full_name":"NaCl::Serializable","name":"Serializable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl/Signatures/Ed25519","kind":"module","full_name":"NaCl::Signatures::Ed25519","name":"Ed25519"},"doc":"Private key for producing digital signatures using the Ed25519 algorithm.\nEd25519 provides a 128-bit security level, that is to say, all known attacks\ntake at least 2^128 operations, providing the same security level as\nAES-128, NIST P-256, and RSA-3072.\n\nSigning keys are produced from a 32-byte (256-bit) random seed value.\nThis value can be passed into the SigningKey constructor as a String\nwhose bytesize is 32.\n\nThe public VerifyKey can be computed from the private 32-byte seed value\nas well, eliminating the need to store a \"keypair\".\n\nSigningKey produces 64-byte (512-bit) signatures. The signatures are\ndeterministic: signing the same message will always produce the same\nsignature. This prevents \"entropy failure\" seen in other signature\nalgorithms like DSA and ECDSA, where poor random number generators can\nleak enough information to recover the private key.","summary":"<p>Private key for producing digital signatures using the Ed25519 algorithm.</p>","class_methods":[{"id":"generate-class-method","html_id":"generate-class-method","name":"generate","doc":"Generate a random SigningKey","summary":"<p>Generate a random SigningKey</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/signing_key.cr#L31","def":{"name":"generate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SigningKey.new(NaCl::Random.random_bytes(Ed25519::SEEDBYTES))"}}],"constructors":[{"id":"new(seed)-class-method","html_id":"new(seed)-class-method","name":"new","doc":"Create a SigningKey from a seed value","summary":"<p>Create a SigningKey from a seed value</p>","abstract":false,"args":[{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":""}],"args_string":"(seed)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/signing_key.cr#L36","def":{"name":"new","args":[{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(seed)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"bytes:Slice(UInt8)-instance-method","html_id":"bytes:Slice(UInt8)-instance-method","name":"bytes","doc":"Return the raw seed value of this key","summary":"<p>Return the raw seed value of this key</p>","abstract":false,"args":[],"args_string":" : Slice(UInt8)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/signing_key.cr#L60","def":{"name":"bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@seed"}},{"id":"keypair_bytes:Slice(UInt8)-instance-method","html_id":"keypair_bytes:Slice(UInt8)-instance-method","name":"keypair_bytes","doc":"Return the raw 64 byte value of this key","summary":"<p>Return the raw 64 byte value of this key</p>","abstract":false,"args":[],"args_string":" : Slice(UInt8)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/signing_key.cr#L65","def":{"name":"keypair_bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@signing_key"}},{"id":"sign(message)-instance-method","html_id":"sign(message)-instance-method","name":"sign","doc":"Sign a message using this key","summary":"<p>Sign a message using this key</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(message)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/signing_key.cr#L50","def":{"name":"sign","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"buffer = Util.prepend_zeros(signature_bytes, message)\nbuffer_len = (Util.zeros(64)).map(&.to_u64)\nLibSodium.crypto_sign_ed25519(buffer, buffer_len, message, message.bytesize, @signing_key)\nbuffer[0, signature_bytes]\n"}},{"id":"signature_bytes-instance-method","html_id":"signature_bytes-instance-method","name":"signature_bytes","doc":"The size of signatures generated by the SigningKey instance","summary":"<p>The size of signatures generated by the SigningKey instance</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/signing_key.cr#L75","def":{"name":"signature_bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Ed25519::SIGNATUREBYTES"}},{"id":"verify_key:VerifyKey-instance-method","html_id":"verify_key:VerifyKey-instance-method","name":"verify_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : VerifyKey","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/signing_key.cr#L30","def":{"name":"verify_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"VerifyKey","visibility":"Public","body":"@verify_key"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/nacl/NaCl/Signatures/Ed25519/VerifyKey","path":"NaCl/Signatures/Ed25519/VerifyKey.html","kind":"class","full_name":"NaCl::Signatures::Ed25519::VerifyKey","name":"VerifyKey","abstract":false,"superclass":{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/nacl/NaCl/Serializable","kind":"module","full_name":"NaCl::Serializable","name":"Serializable"},{"html_id":"github.com/watzon/nacl/NaCl/KeyComparator","kind":"module","full_name":"NaCl::KeyComparator","name":"KeyComparator"},{"html_id":"github.com/watzon/nacl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/watzon/nacl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/nacl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"nacl/signatures/ed25519/verify_key.cr","line_number":4,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/verify_key.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/watzon/nacl/NaCl/KeyComparator","kind":"module","full_name":"NaCl::KeyComparator","name":"KeyComparator"},{"html_id":"github.com/watzon/nacl/NaCl/Serializable","kind":"module","full_name":"NaCl::Serializable","name":"Serializable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl/Signatures/Ed25519","kind":"module","full_name":"NaCl::Signatures::Ed25519","name":"Ed25519"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(key:Bytes)-class-method","html_id":"new(key:Bytes)-class-method","name":"new","doc":"Create a new VerifyKey object from a public key.","summary":"<p>Create a new VerifyKey object from a public key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Bytes"}],"args_string":"(key : Bytes)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/verify_key.cr#L11","def":{"name":"new","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"bytes:Slice(UInt8)-instance-method","html_id":"bytes:Slice(UInt8)-instance-method","name":"bytes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Slice(UInt8)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/verify_key.cr#L42","def":{"name":"bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key"}},{"id":"signature_bytes-instance-method","html_id":"signature_bytes-instance-method","name":"signature_bytes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/verify_key.cr#L38","def":{"name":"signature_bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Ed25519::SIGNATUREBYTES"}},{"id":"verify(signature,message)-instance-method","html_id":"verify(signature,message)-instance-method","name":"verify","doc":"Verify a signature for a given message\n\nRaises if the signature is invalid.","summary":"<p>Verify a signature for a given message</p>","abstract":false,"args":[{"name":"signature","doc":null,"default_value":"","external_name":"signature","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(signature, message)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/signatures/ed25519/verify_key.cr#L18","def":{"name":"verify","args":[{"name":"signature","doc":null,"default_value":"","external_name":"signature","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Util.check_length(signature, signature_bytes, \"signature\")\nsig_and_msg = (signature.to_a + message.bytes).to_unsafe.to_slice(signature.bytesize + message.bytesize)\nbuffer = Util.zeros(sig_and_msg.bytesize)\nbuffer_len = (Util.zeros(64)).map(&.to_u64)\nsuccess = LibSodium.crypto_sign_ed25519_open(buffer, buffer_len, sig_and_msg, sig_and_msg.bytesize, @key)\nif success\nelse\n  raise(BadSignatureError.new(\"signature was forged/corrupt\"))\nend\ntrue\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/watzon/nacl/NaCl/Util","path":"NaCl/Util.html","kind":"module","full_name":"NaCl::Util","name":"Util","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"nacl/util.cr","line_number":2,"url":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr"}],"repository_name":"github.com/watzon/nacl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/watzon/nacl/NaCl/Util","kind":"module","full_name":"NaCl::Util","name":"Util"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/nacl/NaCl","kind":"module","full_name":"NaCl","name":"NaCl"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"check_length(collection,length,description)-instance-method","html_id":"check_length(collection,length,description)-instance-method","name":"check_length","doc":"Check the length of the passed in collection\n\nIn several places through the codebase we have to be VERY strict with\nwhat length of string we accept.  This method supports that.","summary":"<p>Check the length of the passed in collection</p>","abstract":false,"args":[{"name":"collection","doc":null,"default_value":"","external_name":"collection","restriction":""},{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""}],"args_string":"(collection, length, description)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr#L64","def":{"name":"check_length","args":[{"name":"collection","doc":null,"default_value":"","external_name":"collection","restriction":""},{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if collection.empty?\n  raise(LengthError.new(\"#{description} was empty (Expected size of #{length.to_i})\"))\nend\nif collection.bytesize != length.to_i\n  raise(LengthError.new(\"#{description} was #{collection.bytesize} bytes (Expected #{length.to_i})\"))\nend\ntrue\n"}},{"id":"prepend_zeros(n,message)-instance-method","html_id":"prepend_zeros(n,message)-instance-method","name":"prepend_zeros","doc":"Prepends a message with zeros\n\nMany functions require a string with some zeros prepended.\n\n@param [Integer] n The number of zeros to prepend\n@param [String] message The string to be prepended\n\n@return [String] a bunch of zeros","summary":"<p>Prepends a message with zeros</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(n, message)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr#L24","def":{"name":"prepend_zeros","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((zeros(n)).to_a + message.bytes).to_unsafe.to_slice(n + message.bytesize)"}},{"id":"remove_zeros(n,message)-instance-method","html_id":"remove_zeros(n,message)-instance-method","name":"remove_zeros","doc":"Remove zeros from the start of a message\n\nMany functions require a string with some zeros prepended, then need them removing after.\nNote: this modifies the passed in string\n\n@param [Integer] n The number of zeros to remove\n@param [String] message The string to be slice\n\n@return [String] less a bunch of zeros","summary":"<p>Remove zeros from the start of a message</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(n, message)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr#L37","def":{"name":"remove_zeros","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message[n, message.bytesize - n]"}},{"id":"verify16(one,two)-instance-method","html_id":"verify16(one,two)-instance-method","name":"verify16","doc":"Compare two 16 byte strings in constant time\n\nThis should help to avoid timing attacks for string comparisons in your\napplication.  Note that many of the functions (such as HmacSha512#verify)\nuse this method under the hood already.","summary":"<p>Compare two 16 byte strings in constant time</p>","abstract":false,"args":[{"name":"one","doc":null,"default_value":"","external_name":"one","restriction":""},{"name":"two","doc":null,"default_value":"","external_name":"two","restriction":""}],"args_string":"(one, two)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr#L124","def":{"name":"verify16","args":[{"name":"one","doc":null,"default_value":"","external_name":"one","restriction":""},{"name":"two","doc":null,"default_value":"","external_name":"two","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (two.bytesize == 16) && (one.bytesize == 16)\nelse\n  return false\nend\nLibSodium.crypto_verify_16(one, two)\n"}},{"id":"verify16!(one,two)-instance-method","html_id":"verify16!(one,two)-instance-method","name":"verify16!","doc":"Compare two 16 byte strings in constant time\n\nThis should help to avoid timing attacks for string comparisons in your\napplication.  Note that many of the functions (such as HmacSha512#verify)\nuse this method under the hood already.","summary":"<p>Compare two 16 byte strings in constant time</p>","abstract":false,"args":[{"name":"one","doc":null,"default_value":"","external_name":"one","restriction":""},{"name":"two","doc":null,"default_value":"","external_name":"two","restriction":""}],"args_string":"(one, two)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr#L134","def":{"name":"verify16!","args":[{"name":"one","doc":null,"default_value":"","external_name":"one","restriction":""},{"name":"two","doc":null,"default_value":"","external_name":"two","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_length(one, 16, \"First message\")\ncheck_length(two, 16, \"Second message\")\nLibSodium.crypto_verify_16(one, two)\n"}},{"id":"verify32(one,two)-instance-method","html_id":"verify32(one,two)-instance-method","name":"verify32","doc":"Compare two 32 byte strings in constant time\n\nThis should help to avoid timing attacks for string comparisons in your\napplication.  Note that many of the functions (such as HmacSha512#verify)\nuse this method under the hood already.","summary":"<p>Compare two 32 byte strings in constant time</p>","abstract":false,"args":[{"name":"one","doc":null,"default_value":"","external_name":"one","restriction":""},{"name":"two","doc":null,"default_value":"","external_name":"two","restriction":""}],"args_string":"(one, two)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr#L103","def":{"name":"verify32","args":[{"name":"one","doc":null,"default_value":"","external_name":"one","restriction":""},{"name":"two","doc":null,"default_value":"","external_name":"two","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (two.bytesize == 32) && (one.bytesize == 32)\nelse\n  return false\nend\nLibSodium.crypto_verify_32(one, two)\n"}},{"id":"verify32!(one,two)-instance-method","html_id":"verify32!(one,two)-instance-method","name":"verify32!","doc":"Compare two 32 byte strings in constant time\n\nThis should help to avoid timing attacks for string comparisons in your\napplication.  Note that many of the functions (such as HmacSha512#verify)\nuse this method under the hood already.","summary":"<p>Compare two 32 byte strings in constant time</p>","abstract":false,"args":[{"name":"one","doc":null,"default_value":"","external_name":"one","restriction":""},{"name":"two","doc":null,"default_value":"","external_name":"two","restriction":""}],"args_string":"(one, two)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr#L113","def":{"name":"verify32!","args":[{"name":"one","doc":null,"default_value":"","external_name":"one","restriction":""},{"name":"two","doc":null,"default_value":"","external_name":"two","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_length(one, 32, \"First message\")\ncheck_length(two, 32, \"Second message\")\nLibSodium.crypto_verify_32(one, two)\n"}},{"id":"verify64(one,two)-instance-method","html_id":"verify64(one,two)-instance-method","name":"verify64","doc":"Compare two 64 byte strings in constant time\n\nThis should help to avoid timing attacks for string comparisons in your\napplication.  Note that many of the functions (such as HmacSha512#verify)\nuse this method under the hood already.","summary":"<p>Compare two 64 byte strings in constant time</p>","abstract":false,"args":[{"name":"one","doc":null,"default_value":"","external_name":"one","restriction":""},{"name":"two","doc":null,"default_value":"","external_name":"two","restriction":""}],"args_string":"(one, two)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr#L82","def":{"name":"verify64","args":[{"name":"one","doc":null,"default_value":"","external_name":"one","restriction":""},{"name":"two","doc":null,"default_value":"","external_name":"two","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (two.bytesize == 64) && (one.bytesize == 64)\nelse\n  return false\nend\nLibSodium.crypto_verify_64(one, two)\n"}},{"id":"verify64!(one,two)-instance-method","html_id":"verify64!(one,two)-instance-method","name":"verify64!","doc":"Compare two 64 byte strings in constant time\n\nThis should help to avoid timing attacks for string comparisons in your\napplication.  Note that many of the functions (such as HmacSha512#verify)\nuse this method under the hood already.","summary":"<p>Compare two 64 byte strings in constant time</p>","abstract":false,"args":[{"name":"one","doc":null,"default_value":"","external_name":"one","restriction":""},{"name":"two","doc":null,"default_value":"","external_name":"two","restriction":""}],"args_string":"(one, two)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr#L92","def":{"name":"verify64!","args":[{"name":"one","doc":null,"default_value":"","external_name":"one","restriction":""},{"name":"two","doc":null,"default_value":"","external_name":"two","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_length(one, 64, \"First message\")\ncheck_length(two, 64, \"Second message\")\nLibSodium.crypto_verify_64(one, two)\n"}},{"id":"zero_pad(n,message)-instance-method","html_id":"zero_pad(n,message)-instance-method","name":"zero_pad","doc":"Pad a string out to n characters with zeros\n\n@param [Integer] n The length of the resulting string\n@param [String]  message the message to be padded\n\n@raise [RbNaCl::LengthError] If the string is too long\n\n@return [String] A string, n bytes long","summary":"<p>Pad a string out to n characters with zeros</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(n, message)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr#L49","def":{"name":"zero_pad","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"len = message.bytesize\nif len == n\n  message.to_slice\nelse\n  if len > n\n    raise(LengthError.new(\"String too long for zero-padding to #{n} bytes\"))\n  else\n    message.to_slice + (zeros(n - len))\n  end\nend\n"}},{"id":"zeros(n=32)-instance-method","html_id":"zeros(n=32)-instance-method","name":"zeros","doc":"Returns a string of n zeros\n\nLots of the functions require us to create strings to pass into functions of a specified size.\n\n@param [Integer] n the size of the string to make\n\n@return [String] A nice collection of zeros","summary":"<p>Returns a string of n zeros</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"32","external_name":"n","restriction":""}],"args_string":"(n = <span class=\"n\">32</span>)","source_link":"https://github.com/watzon/nacl/blob/3cf13541e88e09c6be38fee6b3fd721065b965e7/src/nacl/util.cr#L12","def":{"name":"zeros","args":[{"name":"n","doc":null,"default_value":"32","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(\"\\u0000\" * n).to_slice"}}],"macros":[],"types":[]}]}]}}